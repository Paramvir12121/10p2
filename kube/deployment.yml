apiVersion: v1
kind: Service
metadata:
  name: dynamodb-local
spec:
  selector:
    app: dynamodb-local
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamodb-local
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dynamodb-local
  template:
    metadata:
      labels:
        app: dynamodb-local
    spec:
      containers:
      - name: dynamodb-local
        image: amazon/dynamodb-local:latest
        args: ["-jar", "DynamoDBLocal.jar", "-inMemory"]
        ports:
        - containerPort: 8000
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 3000
      targetPort: 3000
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "development"
        - name: DYNAMODB_ENDPOINT
          value: "http://dynamodb-local:8000"
        - name: DYNAMODB_ACCESS_KEY_ID
          value: "local"
        - name: DYNAMODB_SECRET_ACCESS_KEY
          value: "local"
        - name: DYNAMODB_REGION
          value: "us-east-1"
        - name: DYNAMODB_TABLE_NAME
          value: "FocusAppData"
        resources:
          limits:
            memory: "1Gi"
            cpu: "500m"
          requests:
            memory: "512Mi"
            cpu: "250m"